<Commmon:TitleBarHelperClass x:Class="CommonFrontEnd.View.Order.SwiftOrderEntry"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"                     
        xmlns:Commmon="clr-namespace:CommonFrontEnd.Common"
        xmlns:local="clr-namespace:CommonFrontEnd.View.Order"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        mc:Ignorable="d" WindowStyle="{Binding isHideTitle}" 
        Title="{Binding HeaderTitle}" Height="125.582" Width="985.684" 
                             Top="{Binding TopPosition,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
        Left="{Binding LeftPosition,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
        Background="{Binding WindowColour}" ResizeMode="NoResize" ShowInTaskbar="False">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="LocationChanged">
            <i:InvokeCommandAction Command="{Binding myLocationChanged}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="SizeChanged">
            <i:InvokeCommandAction Command="{Binding myLocationChanged}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding SwiftOrderEntryClosing}"/>
        </i:EventTrigger>

    </i:Interaction.Triggers>

    <!--<Window.CommandBindings>
        <CommandBinding Command="Close" Executed="OnCloseExecuted" />
    </Window.CommandBindings>-->

    <Commmon:TitleBarHelperClass.InputBindings>
        <KeyBinding Key="F1" Command="{Binding BuyWindow}" CommandParameter="B"/>
        <KeyBinding Key="F2" Command="{Binding BuyWindow}" CommandParameter="S"/>
        <KeyBinding Key="Add" Command="{Binding BuyWindow}" CommandParameter="B"/>
        <KeyBinding Key="Subtract" Command="{Binding BuyWindow}" CommandParameter="S"/>
        <KeyBinding Key="Return" Modifiers="Ctrl" Command="{Binding SubmitButton}" />
        <KeyBinding Command="Close" Key="Esc" />
    </Commmon:TitleBarHelperClass.InputBindings>

    <Commmon:TitleBarHelperClass.MenuItems>
        <Commmon:SystemMenuItem Command="{Binding Path= HideTitle}" Header="Hide Title" Id="1"/>
        <Commmon:SystemMenuItem Command="{Binding Path= NormalOrderEntry}" Header="Normal Order Entry" />
    </Commmon:TitleBarHelperClass.MenuItems>

    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <TextBox x:Name="PART_EditableTextBox"
                                                 MaxLength="11"
                                                 CharacterCasing="Upper"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/SwiftOrderEntryTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>


    <Border Background="Transparent" Margin="0,0,0,0">
        <Border.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Show TitleBar" Command="{Binding ShowTitle}"/>
            </ContextMenu>
        </Border.ContextMenu>
        <Grid Margin="0,0,2,164">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="23*"/>
                <ColumnDefinition Width="595*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <StackPanel  Orientation="Horizontal" Margin="0,0,0,-30" Grid.Row="0" Grid.RowSpan="3" Grid.ColumnSpan="2">
                <!--<StackPanel.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="show" DisplayMemberPath="{Binding Path= ShowTitle}"/>
                </ContextMenu>
            </StackPanel.ContextMenu>-->
                <ComboBox  MaxDropDownHeight="30" Background="White" Grid.Row="0" x:Name="comboBox" Text="EXH" IsEditable="True" ItemsSource="{Binding Exchange}" SelectedItem="{Binding Selected_EXCH,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Left" Height="26" Margin="8,2,0,0" VerticalAlignment="Top" Width="70" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" />
                <ComboBox ItemsPanel="{DynamicResource VSP}" IsEditable="False" MaxDropDownHeight="50" Grid.Row="0" Text="SEG" HorizontalAlignment="Left" Height="26" Margin="15,2,0,0" VerticalAlignment="Top" Width="91"   ItemsSource="{Binding ScripSegmentLst}"  SelectedItem="{Binding ScripSelectedSegment,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling"/>
                <!--Equity stack -->
                <StackPanel Orientation="Horizontal" Visibility="{Binding EquityBoundVis}">
                    <ComboBox  ItemsPanel="{DynamicResource VSP}" Grid.Row="0" IsEditable="True" MaxDropDownHeight="50" HorizontalAlignment="Left" Height="26" Margin="15,2,0,0" VerticalAlignment="Top" Width="112" ItemsSource="{Binding ScripCodeLst}"  Text="{Binding ScripSelectedCode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" />
                    <TextBox Grid.Row="0"  HorizontalAlignment="Left" Height="28" Margin="15,2,0,0" VerticalAlignment="Top" Width="154" Text="{Binding ScripNameSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" IsEnabled="False"/>
                    <!--Text="SYM"-->
                    <ComboBox Style="{StaticResource ComboBoxStyle}" ItemsPanel="{DynamicResource VSP}" MaxDropDownHeight="50" IsEditable="True" HorizontalAlignment="Left" Height="26" Margin="15,2,0,0" VerticalAlignment="Top" Width="132"  Text="{Binding ScripSymSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding ScripSymLst}" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling"/>
                    <ComboBox IsEnabled="{Binding CurrencyAssetEnable}"  Text="CP" IsEditable="True" ItemsSource="{Binding CallPutLSt}" SelectedItem="{Binding CallPutSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="26" Margin="15,2,0,0" VerticalAlignment="Top" Width="119"/>
                    <ComboBox  IsEnabled="{Binding CurrencyAssetEnable}" Text="STK" IsEditable="True" ItemsSource="{Binding StkPrcLst}" SelectedItem="{Binding StkPriceSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="26" Margin="15,2,0,0" VerticalAlignment="Top" Width="88"/>
                    <ComboBox IsEnabled="{Binding CurrencyAssetEnable}"  Text="EXP" IsEditable="True" HorizontalAlignment="Left" Height="26" Margin="15,2,0,0" VerticalAlignment="Top" Width="83"/>
                </StackPanel>
                <!--Derivative stack -->
                <StackPanel Orientation="Horizontal" Visibility="{Binding DerivativeBoundVis}">
                    <ComboBox   Grid.Row="0" Text="Ins Type" ItemsSource="{Binding IntrTypeLst}"  SelectedItem="{Binding IntrTypeSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  IsEditable="False" MaxDropDownHeight="50" HorizontalAlignment="Left" Height="26" Margin="-762,2,0,0" VerticalAlignment="Top" Width="112"    VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" >
                    </ComboBox>
                    <ComboBox Grid.Row="0" IsEditable="True" Text="UnderlyingAsset" ItemsSource="{Binding UnderLyingAssetLst}"  SelectedItem="{Binding UnderAssetSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="28" Margin="-635,2,0,0" VerticalAlignment="Top" Width="103" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" />
                    <ComboBox IsEnabled="{Binding CurrencyAssetEnable}"  Text="EXP" ItemsSource="{Binding ExpDateLst}" SelectedItem="{Binding ExpDateSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEditable="False" HorizontalAlignment="Left" MaxDropDownHeight="53" Height="26" Margin="-520,2,0,0" VerticalAlignment="Top" Width="100"/>
                    <ComboBox IsEnabled="{Binding CallPutEnable}"  ItemsSource="{Binding CallPutLSt}" SelectedItem="{Binding CallPutSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEditable="True" HorizontalAlignment="Left" Height="26" Margin="-430,2,0,0" VerticalAlignment="Top" Width="80"/>
                    <ComboBox  IsEnabled="{Binding CallPutEnable}" Text="STK" ItemsSource="{Binding StkPrcLst}" SelectedItem="{Binding StkPriceSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEditable="True" HorizontalAlignment="Left" Height="26" Margin="-325,2,0,0" VerticalAlignment="Top" Width="96"/>
                    <ComboBox  Text="instname" MaxDropDownHeight="50" IsEditable="False" ItemsSource="{Binding InstrumentNameColl}" SelectedItem="{Binding InstrNameSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="26" Margin="-230,2,0,0" VerticalAlignment="Top" Width="132" BorderBrush="Transparent"   VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" />
                </StackPanel>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="1"  Margin="0,31,0,-62" Grid.ColumnSpan="2" Grid.RowSpan="2">
                <TextBox Style="{DynamicResource SwiftTextBoxStyle}"  x:Name="textBox3" Text="{Binding qty}" Tag="Qty" HorizontalAlignment="Left" MaxLength="10" Height="26" Margin="8,2,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="107" Grid.RowSpan="3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewKeyDown">
                            <cmd:EventToCommand  Command="{Binding PeviewDown, Mode=TwoWay}"  PassEventArgsToCommand="True"  />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <Commmon:NumericTextBoxBehaviour AllowDecimal="False"/>
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox  Style="{DynamicResource SwiftTextBoxStyle}" Text="{Binding rate, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" x:Name="textBox4"  HorizontalAlignment="Left" MaxLength="11" Height="26" Margin="15,2,0,0"  TextWrapping="Wrap" VerticalAlignment="Top" Width="113" Grid.RowSpan="3" Tag="Rate">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewKeyDown2">
                            <cmd:EventToCommand  Command="{Binding PreviewDown2, Mode=TwoWay}"  PassEventArgsToCommand="True"  />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <Commmon:NumericTextBoxBehaviour AllowDecimal="True"/>
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox Style="{DynamicResource SwiftTextBoxStyle}" HorizontalAlignment="Left" x:Name="textBox5" Height="26" Margin="15,2,0,0" TextWrapping="Wrap" Text="{Binding revQty,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="86" Grid.RowSpan="3" Tag="Rev Qty" MaxLength="10">
                    <i:Interaction.Behaviors>
                        <Commmon:NumericTextBoxBehaviour AllowDecimal="False"/>
                    </i:Interaction.Behaviors>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="OnPreviewKeyDown3">
                            <cmd:EventToCommand  Command="{Binding PeviewDown, Mode=TwoWay}"  PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <ComboBox Text="RETN" IsEditable="True" HorizontalAlignment="Left" Height="26" Margin="15,2,0,0" VerticalAlignment="Top" Width="68" Grid.RowSpan="3" ItemsSource="{Binding RetType}" SelectedItem="{Binding RetTypeSelected}" />
                <ComboBox Text="DATE" IsEditable="True" IsEnabled="{Binding CurrencyAssetEnable}" HorizontalAlignment="Left" Height="26" Margin="15,2,0,0" VerticalAlignment="Top" Width="87" Grid.RowSpan="3" Visibility="Hidden"/>
                <ComboBox MaxDropDownHeight="50" Text="ORDTTYP"  IsEditable="True" HorizontalAlignment="Left" Height="26" Margin="10,2,0,0"  VerticalAlignment="Top" Width="110" Grid.RowSpan="3" ItemsSource="{Binding OrderTypeList}" SelectedItem="{Binding OrderTypeSelected}"/>
                <TextBox Style="{DynamicResource SwiftTextBoxStyle}" HorizontalAlignment="Left" Height="26" Margin="15,2,0,0" TextWrapping="Wrap" Text="{Binding trgPrice,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="113" Grid.RowSpan="3" Tag="Trg Price" IsEnabled="{Binding TrgEnabled}">
                    <i:Interaction.Behaviors>
                        <Commmon:NumericTextBoxBehaviour AllowDecimal="True"/>
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox Style="{DynamicResource SwiftTextBoxStyle}" Text="{Binding MktPT}" HorizontalAlignment="Left" Height="26" Margin="7,2,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="48" Grid.RowSpan="3" Tag="MKT%" IsEnabled="{Binding MktPrtEnabled}" MaxLength="4">
                    <i:Interaction.Behaviors>
                        <Commmon:NumericTextBoxBehaviour AllowDecimal="True"/>
                    </i:Interaction.Behaviors>
                </TextBox>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0,63,0,-96" Grid.Row="2" Grid.ColumnSpan="2">
                <ComboBox Style="{StaticResource ComboBoxStyle}"  IsEnabled="{Binding clientinputEnabled}" IsEditable="True"   ItemsSource="{Binding ClientIDinputlst}" Text="{Binding ShortClientSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="26" Margin="8,-2,0,0" Grid.RowSpan="3" VerticalAlignment="Top" Width="103" />
                <TextBox Style="{DynamicResource SwiftTextBoxStyle}" Text="{Binding ClientName,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" x:Name="textBox" IsEnabled="False" HorizontalAlignment="Left" Height="26" Margin="15,-2,0,0" Grid.RowSpan="3" TextWrapping="Wrap"  VerticalAlignment="Top" Width="79" Tag="Client"/>
                <ComboBox IsEditable="False"  IsTabStop="True" IsTextSearchEnabled="True"  Text="TYPE" HorizontalAlignment="Left" Height="26" Margin="15,-2,0,0" Grid.RowSpan="3" MaxDropDownHeight="50" VerticalAlignment="Top" Width="98" ItemsSource="{Binding Clienttypelst}" SelectedItem="{Binding clienttypeselected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox  x:Name="textBox1" IsEnabled="{Binding CurrencyAssetEnable}" HorizontalAlignment="Left" Height="26" Margin="15,-2,0,0" Grid.RowSpan="3" TextWrapping="Wrap" Text="CPCODE" VerticalAlignment="Top" Width="110"/>
                <CheckBox x:Name="checkBox" IsChecked="{Binding intracheck}" Content="INTRADAY" HorizontalAlignment="Left" Height="26" Margin="15,-2,0,0" Grid.RowSpan="3" VerticalAlignment="Top" Width="78" Visibility="Hidden" />
                <TextBox Style="{DynamicResource SwiftTextBoxStyle}" x:Name="textBox2" HorizontalAlignment="Left" Height="26" Margin="15,-2,0,0" Grid.RowSpan="3" TextWrapping="Wrap" Text="{Binding Remarks}" VerticalAlignment="Top" Width="232" Tag="Remarks" Visibility="Hidden"/>
                <Button  x:Name="Buy" Content="Buy" Width="89" Visibility="{Binding BuyVisible}" HorizontalAlignment="Left" Height="24" Margin="10,-2,0,0"  VerticalAlignment="Top" Command="{Binding SubmitButton}" IsDefault="True"/>
                <Button x:Name="sell" Content="Sell" Width="89" Visibility="{Binding SellVisible}" HorizontalAlignment="Left" Height="24"  Margin="-88,-8,0,5" Command="{Binding SubmitButton}" IsDefault="True"/>
                <Button x:Name="Modify" Content="Modify" Width="89" Visibility="{Binding ModifyVisible,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="24"  Margin="-88,-3,0,5" Command="{Binding Modify_Click}" IsDefault="True"/>
            </StackPanel>

        </Grid>
    </Border>
</Commmon:TitleBarHelperClass>
