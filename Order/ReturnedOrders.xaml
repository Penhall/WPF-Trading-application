<Common:TitleBarHelperClass x:Class="CommonFrontEnd.View.Order.ReturnedOrders"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CommonFrontEnd.View.Order"
        xmlns:Common="clr-namespace:CommonFrontEnd.Common"                      
        xmlns:s ="clr-namespace:CommonFrontEnd.Common"
        mc:Ignorable="d" ShowInTaskbar="False"
        Title="Returned Orders" Height="450" Width="778" Style="{DynamicResource DefaultFont}"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:loc="clr-namespace:System.Globalization;assembly=mscorlib">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/DefaultFont.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type TextBlock}" x:Key="CellRightAlign">
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Control.Margin" Value="2,0,4,0"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="CellLeftAlign">
                <Setter Property="Control.HorizontalAlignment" Value="Left" />
                <Setter Property="Control.Margin" Value="4,0,2,0"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="CellCenterAlign">
                <Setter Property="Control.HorizontalAlignment" Value="Center" />
            </Style>
        </ResourceDictionary>
        
    </Window.Resources>
    <Common:TitleBarHelperClass.MenuItems>
        <Common:SystemMenuItem Command="{Binding Path=ExportExcel}" Header="Save Equity Return Orders in CSV" Id="1"/>
        <Common:SystemMenuItem Command="{Binding Path=ExportExcel}" Header="Save Derivatives Return Orders in CSV" Id="2"/>
        <Common:SystemMenuItem Command="{Binding Path=ExportExcel}" Header="Save Currency Return Orders in CSV" Id="3"/>
        <Common:SystemMenuItem Command="{Binding Path=ExportExcel}" Header="Save All Return Orders in CSV" Id="-1"/>

    </Common:TitleBarHelperClass.MenuItems>
    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding CloseWindowsOnEscape}" />
    </Window.InputBindings>
    
    
    <Grid Margin="0,0,2,0">
        <GroupBox x:Name="groupBox" Header="Filter" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="463" Height="105"  >
            <Grid HorizontalAlignment="Left" Height="79" VerticalAlignment="Top" Width="453" Margin="0,0,-2,0">
                <GroupBox x:Name="groupBox1"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="235" Height="57">
                    <GroupBox.Header>
                        <CheckBox TabIndex="1"  IsChecked="{Binding chkReasonFilter}">
                            <AccessText>_Reason Filter</AccessText></CheckBox>
                    </GroupBox.Header>
                    <Grid HorizontalAlignment="Left" Height="42" Margin="0,0,-2,-1" VerticalAlignment="Top" Width="247">
                        <Label x:Name="label" Content="Reason" HorizontalAlignment="Left" Margin="25,2,0,0" VerticalAlignment="Top"/>
                        <ComboBox TabIndex="2" x:Name="comboBox" HorizontalAlignment="Left" Margin="80,6,0,0" VerticalAlignment="Top" Width="142" SelectedItem="{Binding selectedReason, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding FilterReasonList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding cmbReason, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </GroupBox>
                <GroupBox x:Name="groupBox2" HorizontalAlignment="Left" Margin="246,0,0,0" VerticalAlignment="Top" Width="133" Height="76">
                    <GroupBox.Header>
                        <CheckBox TabIndex="3"  IsChecked="{Binding chkTimeFilter}">
                            <AccessText>_Time Filter</AccessText></CheckBox>
                    </GroupBox.Header>
                    <Grid HorizontalAlignment="Left" Height="63" Margin="0,-6,-2,-3" VerticalAlignment="Top" Width="124">
                        <!--<Label x:Name="label1" Content="From" HorizontalAlignment="Left" Margin="2,8,0,0" VerticalAlignment="Top"/>
                        <Label x:Name="label1_Copy" Content="To" HorizontalAlignment="Left" Margin="2,31,0,0" VerticalAlignment="Top"/>-->
                        <!--<TextBox x:Name="textBox2" HorizontalAlignment="Left" Height="23" Margin="41,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="62"/>
                        
                        <TextBox x:Name="textBox2_Copy" HorizontalAlignment="Left" Height="23" Margin="41,37,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="62"/>-->
                        <Label Content="From" Margin="-5,8,0,0"/>
                        <xctk:TimePicker TabIndex="4" x:Name="StartTimeText"  IsEnabled="{Binding tpEnability}"  DisplayDefaultValueOnEmptyText="False" DefaultValue="00:00:00" Height="20" Width="95" Margin="30,0,0,21" Tag="Start Time" EndTime="23:59:59"  Format="Custom"  FormatString="HH:mm:ss" Minimum="00:00:00" Value="{x:Static sys:DateTime.Now}" CultureInfo="{x:Static loc:CultureInfo.InvariantCulture}">

                        </xctk:TimePicker>
                        <Label Content="To" Margin="-5,35,0,0"/>
                        <xctk:TimePicker TabIndex="5" x:Name="StopTimeText" IsEnabled="{Binding tpEnability}" DisplayDefaultValueOnEmptyText="False" DefaultValue="00:00:00"  Height="20" Width="95" Margin="30,29,0,0" EndTime="23:59:59"  Format="Custom"  FormatString="HH:mm:ss"  Minimum="00:00:00" Value="{x:Static sys:DateTime.Now}" CultureInfo="{x:Static loc:CultureInfo.InvariantCulture}"/>
                    </Grid>
                </GroupBox>
                <Button TabIndex="6" x:Name="button" Command="{Binding btnFilterGrid}" HorizontalAlignment="Left" Margin="388,21,0,0" VerticalAlignment="Top" Width="62">
                    <AccessText>_Filter</AccessText></Button>
                <Button TabIndex="7" x:Name="button_Copy" Command="{Binding btnShowALL}"  HorizontalAlignment="Left" Margin="388,49,0,0" IsEnabled="{Binding btnShowAllEnability}" VerticalAlignment="Top" Width="62">
                    <AccessText>Show _All</AccessText></Button>
            </Grid>
        </GroupBox>
        <GroupBox x:Name="groupBox3" Header="Email EOSS/EOTODY return order" HorizontalAlignment="Left" Margin="478,10,0,0" VerticalAlignment="Top" Height="105" Width="235">
            <Grid HorizontalAlignment="Left" Height="88" Margin="0,-5,0,0" VerticalAlignment="Top" Width="194">
                <Label x:Name="label2" Content="Enter Client Code" HorizontalAlignment="Left" Margin="10,6,0,0" VerticalAlignment="Top"/>
                <s:ClickSelectTextBox TabIndex="9" x:Name="textBox" HorizontalAlignment="Left" Height="23" Margin="10,32,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Text="{Binding txtClientID,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                <Button TabIndex="10" x:Name="button1"  HorizontalAlignment="Left" Command="{Binding EMailClick}" Margin="10,60,0,0" VerticalAlignment="Top" Width="77" Height="25">
                    <AccessText>_Email</AccessText></Button>
                <Button TabIndex="11" x:Name="button1_Copy"  Command="{Binding SaveImageClick}" HorizontalAlignment="Left" Margin="95,60,0,0" VerticalAlignment="Top" Width="85" Height="25">
                    <AccessText>Save _Image</AccessText></Button>
            </Grid>
        </GroupBox>
        <DataGrid TabIndex="12" x:Name="dataGrid" Margin="10,120,10,0" VerticalAlignment="Top"  Height="232" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" SelectionUnit="FullRow" AutoGenerateColumns="False" AlternationCount="2" GridLinesVisibility="All"
                  SelectionMode="Extended"  VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" IsReadOnly="True" ScrollViewer.IsDeferredScrollingEnabled="True" EnableRowVirtualization="True" EnableColumnVirtualization="True" KeyboardNavigation.TabNavigation="Once"
                  ItemsSource="{Binding ReturnedOrderCollection,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding selectEntireRow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding BuySell}" Value="B">
                            <Setter Property="Foreground" Value="#0937ef"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding BuySell}" Value="S">
                            <Setter Property="Foreground" Value="#f40000"/>
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding BuySell,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="B/S" MinWidth="32" Width="SizeToCells" Visibility="Visible" ElementStyle="{StaticResource CellCenterAlign}"/>
                <DataGridTextColumn Binding="{Binding ScripID,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="Scrip" MinWidth="60" Width="SizeToCells" Visibility="Visible" ElementStyle="{StaticResource CellLeftAlign}"/>
                <DataGridTextColumn Binding="{Binding SCode,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="SCode" MinWidth="60" Width="SizeToCells" Visibility="Visible"  ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Binding="{Binding TotalQty,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="Qty" MinWidth="60" Width="SizeToCells" Visibility="Visible"  ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Binding="{Binding RevQty,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="Rev Qty" MinWidth="60" Width="SizeToCells" Visibility="Visible"  ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Binding="{Binding Rate,UpdateSourceTrigger=PropertyChanged}" Header="Rate" MinWidth="70" Width="SizeToCells" Visibility="Visible" ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Binding="{Binding ClientID,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="Client" MinWidth="60" Width="SizeToCells" Visibility="Visible" ElementStyle="{StaticResource CellLeftAlign}"/>
                <DataGridTextColumn Binding="{Binding ReturnReason,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="Reason" MinWidth="60" Width="SizeToCells" Visibility="Visible" ElementStyle="{StaticResource CellLeftAlign}"/>
                <DataGridTextColumn Binding="{Binding Time,UpdateSourceTrigger=PropertyChanged, StringFormat=HH:mm:ss}" Header="Time" MinWidth="60" Width="SizeToCells" Visibility="Visible" ElementStyle="{StaticResource CellCenterAlign}"/>
                <DataGridTextColumn Binding="{Binding OrdID,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="Ord ID" MinWidth="120" Width="SizeToCells" Visibility="Visible"  ElementStyle="{StaticResource CellLeftAlign}"/>
                <DataGridTextColumn Binding="{Binding ClientType,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="CltType" MinWidth="60" Width="SizeToCells" Visibility="Visible" ElementStyle="{StaticResource CellCenterAlign}"/>
                <DataGridTextColumn Binding="{Binding RetainTill,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="Retain" MinWidth="50" Width="SizeToCells" Visibility="Visible" ElementStyle="{StaticResource CellLeftAlign}"/>
                <DataGridTextColumn Binding="{Binding CPCode,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="CP Code" MinWidth="70" Width="SizeToCells" Visibility="Visible" ElementStyle="{StaticResource CellLeftAlign}"/>
                <DataGridTextColumn Binding="{Binding OCOTrgRate,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="OCO Trg" MinWidth="70" Width="SizeToCells" Visibility="Visible" ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Binding="{Binding Yield,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="Yield" MinWidth="60" Width="SizeToCells" Visibility="Visible" ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Binding="{Binding DirtyPrice,UpdateSourceTrigger=PropertyChanged, StringFormat=0;;#}" Header="DirtyPrice" MinWidth="60" Width="SizeToCells" Visibility="Visible" ElementStyle="{StaticResource CellRightAlign}"/>
            </DataGrid.Columns>
        </DataGrid>
        <Label x:Name="label3" Content="Reply " HorizontalAlignment="Left" Margin="10,368,0,0" VerticalAlignment="Top" />
        <TextBox x:Name="textBox1" HorizontalAlignment="Left" Height="23" Text="{Binding txtReply,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" IsReadOnly="True" Margin="63,371,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="400"/>
        <Button TabIndex="0" x:Name="btnReSubmit"  Command="{Binding btnReSubmit}" HorizontalAlignment="Left" Margin="478,371,0,0" VerticalAlignment="Top" Width="85" Height="30" >
            <AccessText>Re_Submit</AccessText></Button>
        <Button TabIndex="8" x:Name="button2_Copy"  Command="{Binding btnBatchResubmit}" HorizontalAlignment="Left" Margin="570,371,0,0" VerticalAlignment="Top" Width="145" Height="30" >
            <AccessText>Save _Batch ReSubmit</AccessText></Button>
    </Grid>
</Common:TitleBarHelperClass>
