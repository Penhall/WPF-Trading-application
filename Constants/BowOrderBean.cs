using System;

namespace CommonFrontEnd.Constants
{
    public class BowOrderBean
    {
        public static string f_Id = "OEID";
        public static string f_TableName = "OETableName";
        public static string f_Direction = "OEDirection";
        public static string f_Source = "OESource";
        public static string f_Destination = "OEDestination";
        public static string f_Market = "OEMarket";
        public static string f_Segment = "OESegment";
        public static string f_NseToken = "OENSEToken";
        public static string f_BseToken = "OEBSEToken";
        public static string f_Token = "OEToken";
        public static string f_IsIn = "OEISIN";
        public static string f_InstrumentType = "OEInstrumentType";
        public static string f_Symbol = "OESymbol";
        public static string f_Name = "OENAME";
        public static string f_Series = "OESeries";
        public static string f_Group = "OEGroup";
        public static string f_ExpiryDate = "OEExpiryDate";
        public static string f_StrikePrice = "OEStrikePrice";
        public static string f_OptionType = "OEOptionType";
        public static string f_MessageType = "OEMessageType";
        public static string f_Type = "OEType";
        public static string f_TimeStamp = "OETimestamp";
        public static string f_LogTime = "OELogTime";
        public static string f_AlphaChar = "OEAlphaChar";
        public static string f_TransactionCode = "OETransactionCode";
        public static string f_ErrorCode = "OEErrorCode";
        public static string f_TimeStamp1 = "OETimestamp1";
        public static string f_TimeStamp2 = "OETimestamp2";
        public static string f_UsId = "OEUSID";
        public static string f_UsLoginId = "OEUSLOGINID";
        public static string f_SubmitStatus = "OESubmitStatus";
        public static string f_OrderNumber = "OEOrderNumber";
        public static string f_BookType = "OEBookType";
        public static string f_BuySellIndicator = "OEBuySellIndicator";
        public static string f_Volume = "OEVolume";
        public static string f_VolumeRemaining = "OEVolumeRemaining";
        public static string f_DisclosedVolume = "OEDisclosedVolume";
        public static string f_DisclosedVolumeRemaining = "OEDisclosedVolumeRemaining";
        public static string f_MinimumVolume = "OEMinimumVolume";
        public static string f_VolumeFilledToday = "OEVolumeFilledToday";
        public static string f_Price = "OEPrice";
        public static string f_TriggerPrice = "OETriggerPrice";
        public static string f_ProfitTriggerPrice = "OEProfitTriggerPrice";
        public static string f_StopLossTriggerPrice = "OEStopLossTriggerPrice";
        public static string f_Flags = "OEFlags";
        public static string f_Broker = "OEBroker";
        public static string f_TraderId = "OETraderId";
        public static string f_BranchId = "OEBranchId";
        public static string f_Remarks = "OERemarks";
        public static string f_EntryDateTime = "OEEntryDateTime";
        public static string f_LastModifiedDateTime = "OELastModifiedDateTime";
        public static string f_ParticipantType = "OEParticipantType";
        public static string f_CompetitorPeriod = "OECompetitorPeriod";
        public static string f_SolicitorPeriod = "OESolicitorPeriod";
        public static string f_ModifiedCancelledBy = "OEModifiedCancelledBy";
        public static string f_ReasonCode = "OEReasonCode";
        public static string f_AuctionNumber = "OEAuctionNumber";
        public static string f_CounterPartyBroker = "OECounterPartyBroker";
        public static string f_SuspendedSecurity = "OESuspendedSecurity";
        public static string f_GoodTillDate = "OEGoodTillDate";
        public static string f_GoodTillTime = "OEGoodTillTime";
        public static string f_Settlor = "OESettlor";
        public static string f_ProClientIndicator = "OEProClientIndicator";
        public static string f_SettlementPeriod = "OESettlementPeriod";
        public static string f_CaLevel = "OECALevel";
        public static string f_OpenClose = "OEOpenClose";
        public static string f_CoverUnCover = "OECoverUnCover";
        public static string f_GiveUpFlag = "OEGiveUpFlag";
        public static string f_Purpose = "OEPurpose";
        public static string f_AdminUsId = "OEAdminUSID";
        public static string f_Reason = "OEReason";
        public static string f_Status = "OEStatus";
        public static string f_ExpectedApproverId = "OEExpectedApproverID";
        public static string f_ActualApproverId = "OEActualApproverId";
        public static string f_ApproverRemarks = "OEApproverRemarks";
        public static string f_IntuitionalClient = "OEIntuitionalClient";
        public static string f_SellDestination = "OESellDestination";
        public static string f_BuyDestination = "OEBuyDestination";
        public static string f_BuyPrice = "OEBuyPrice";
        public static string f_SellPrice = "OESellPrice";
        public static string f_CreatedBy = "OECreatedBy";
        public static string f_CreatedAt = "OECreatedAt";
        public static string f_LastUpdatedBy = "OELastUpdatedBy";
        public static string f_LastUpdatedAt = "OELastUpdatedAt";
        public static string f_Field1 = "OEFIELD1";
        public static string f_Field2 = "OEFIELD2";
        public static string f_Field3 = "OEFIELD3";
        public static string f_Field4 = "OEFIELD4";
        public static string f_RowState = "OEROWSTATE";
        public static string f_AuctionId = "auctionid";
        public static string f_BlockDeal = "BlockDeal";
        public static string f_AON = "OEAON";
        public static string f_SettlementType = "OESettlementType";
        public static string f_EstAccruedInterest = "OEEstAccruedInterest";
        public static string f_EstConsideration = "OEEstConsideration";
        public static string f_EstYieldToMaturity = "OEEstYieldToMaturity";
        public static string f_Value = "OEValue";
        public static string f_DisclosedValue = "OEDisclosedValue";
        public static string f_DeptSegment = "DeptSegment";
        public static string f_NegotiatingClients = "NegotiatingClients";
        public static string f_Category = "OECategory";
        public static string f_BackOfficeId = "USBackOfficeId";
        public static int NUMBER_OF_ORDER_PARAMETERS = 78;

        // Only in Local database
        public static string f_Exchange = "OEExchange";
        public static string f_Identifier = "Identifier";
        public static string f_USBackOfficeId = "OEUSBackOfficeId";
        public static string f_AdminUSBackOfficeId = "OEAdminUSBackOfficeId";
        public static string f_ExpectedApproverLoginID = "OEExpectedApproverLoginID";
        public static string f_ActualApproverLoginId = "OEActualApproverLoginId";
        public static string f_OldVolume = "OEOldVolume";
        public static string f_OldPrice = "OEOldPrice";
        public static string f_ErrorMessage = "OEErrorMessage";
        public static string f_CreatedByLoginId = "OECreatedByLoginId";
        public static string f_LastUpdatedByLoginId = "OELastUpdatedByLoginId";


        private long id;
        private long exchange;
        private long market;
        private long segment;
        private long nseToken;
        private long bseToken;
        private long token;
        private string isIn;
        private string instrumentType;
        private string symbol;
        private string series;
        private long expiryDate;
        private long strikePrice;
        private string optionType;
        private long logTime;
        //private string alphaChar;
        private long transactionCode;
        private long errorCode;
        private long usId;
        private string usLoginId;
        private long submitStatus;
        private long orderNumber;
        private long bookType;
        private long buySellIndicator;
        private long volume;
        private long volumeRemaining;
        private long disclosedVolume;
        private long disclosedVolumeRemaining;
        private long minimumVolume;
        private long volumeFilledToday;
        private long price;
        private long triggerPrice;
        private long flags;
        private string broker;
        private long traderId;
        private long branchId;
        private string remarks;
        private long entryDateTime;
        private long lastModifiedDateTime;
        private string participantType;
        private long competitorPeriod;
        private long solicitorPeriod;
        private string modifiedCancelledBy;
        private long reasonCode;
        private long auctionNumber;
        private string counterPartyBroker;
        private string suspendedSecurity;
        private long goodTillDate;
        private string settlor;
        private long proClientIndicator;
        private long settlementPeriod;
        private long caLevel;
        private string openClose;
        private string coverUnCover;
        private string giveUpFlag;
        private long purpose;
        private long adminUsId;
        private string reason;
        private long status;
        private long expectedApproverId;
        private long actualApproverId;
        private string approverRemarks;
        //private long oldVolume;
        //private long oldPrice;
        private long createdBy;
        private System.DateTime createdAt;
        private long lastUpdatedBy;
        private System.DateTime lastUpdatedAt;
        private long field1;
        private System.DateTime field2;
        private string field3;
        private string field4;
        private long rowState;


        public string getMessageForClient()
        {
            return "";
        }
        public void setMessageForClient(string pMessage)
        {
            Array lMessageArray = pMessage.Split('|');
            id = (int)lMessageArray.GetValue(0);
            exchange = (int)lMessageArray.GetValue(1);
            market = (int)lMessageArray.GetValue(2);
            segment = (int)lMessageArray.GetValue(3);
            nseToken = (int)lMessageArray.GetValue(4);
            bseToken = (int)lMessageArray.GetValue(5);
            token = (int)lMessageArray.GetValue(6);
            isIn = lMessageArray.GetValue(7).ToString();
            instrumentType = lMessageArray.GetValue(8).ToString();
            symbol = lMessageArray.GetValue(9).ToString();
            series = lMessageArray.GetValue(10).ToString();
            expiryDate = (int)lMessageArray.GetValue(11);
            strikePrice = (int)lMessageArray.GetValue(12);
            optionType = lMessageArray.GetValue(13).ToString();
            logTime = (int)lMessageArray.GetValue(14);
            transactionCode = (int)lMessageArray.GetValue(15);
            errorCode = (int)lMessageArray.GetValue(16);
            usId = (int)lMessageArray.GetValue(17);
            usLoginId = lMessageArray.GetValue(18).ToString();
            submitStatus = (int)lMessageArray.GetValue(19);
            orderNumber = (int)lMessageArray.GetValue(20);
            bookType = (int)lMessageArray.GetValue(21);
            buySellIndicator = (int)lMessageArray.GetValue(22);
            volume = (int)lMessageArray.GetValue(23);
            volumeRemaining = (int)lMessageArray.GetValue(24);
            disclosedVolume = (int)lMessageArray.GetValue(25);
            disclosedVolumeRemaining = (int)lMessageArray.GetValue(26);
            minimumVolume = (int)lMessageArray.GetValue(27);
            volumeFilledToday = (int)lMessageArray.GetValue(28);
            price = (int)lMessageArray.GetValue(29);
            triggerPrice = (int)lMessageArray.GetValue(30);
            flags = (int)lMessageArray.GetValue(31);
            broker = lMessageArray.GetValue(32).ToString();
            traderId = (int)lMessageArray.GetValue(33);
            branchId = (int)lMessageArray.GetValue(34);
            remarks = lMessageArray.GetValue(35).ToString();
            entryDateTime = (int)lMessageArray.GetValue(36);
            lastModifiedDateTime = (int)lMessageArray.GetValue(37);
            participantType = lMessageArray.GetValue(38).ToString();
            competitorPeriod = (int)lMessageArray.GetValue(39);
            solicitorPeriod = (int)lMessageArray.GetValue(40);
            modifiedCancelledBy = lMessageArray.GetValue(41).ToString();
            reasonCode = (int)lMessageArray.GetValue(42);
            auctionNumber = (int)lMessageArray.GetValue(43);
            counterPartyBroker = lMessageArray.GetValue(44).ToString();
            suspendedSecurity = lMessageArray.GetValue(45).ToString();
            goodTillDate = (int)lMessageArray.GetValue(46);
            settlor = lMessageArray.GetValue(47).ToString();
            proClientIndicator = (int)lMessageArray.GetValue(48);
            settlementPeriod = (int)lMessageArray.GetValue(49);
            caLevel = (int)lMessageArray.GetValue(50);
            openClose = lMessageArray.GetValue(51).ToString();
            coverUnCover = lMessageArray.GetValue(52).ToString();
            giveUpFlag = lMessageArray.GetValue(53).ToString();
            purpose = (int)lMessageArray.GetValue(54);
            adminUsId = (int)lMessageArray.GetValue(55);
            reason = lMessageArray.GetValue(56).ToString();
            status = (int)lMessageArray.GetValue(57);
            expectedApproverId = (int)lMessageArray.GetValue(58);
            actualApproverId = (int)lMessageArray.GetValue(59);
            approverRemarks = lMessageArray.GetValue(60).ToString();
            createdBy = (int)lMessageArray.GetValue(61);
            createdAt = (System.DateTime)lMessageArray.GetValue(62);
            lastUpdatedBy = (int)lMessageArray.GetValue(63);
            lastUpdatedAt = (System.DateTime)lMessageArray.GetValue(64);
            field1 = (long)lMessageArray.GetValue(65);
            field2 = (System.DateTime)lMessageArray.GetValue(66);
            field3 = lMessageArray.GetValue(67).ToString();
            field4 = lMessageArray.GetValue(68).ToString();
            rowState = (int)lMessageArray.GetValue(69);
        }

    }
}
