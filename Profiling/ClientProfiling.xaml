<UserControl x:Class="CommonFrontEnd.View.Profiling.ClientProfiling"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CommonFrontEnd.View.Profiling"
             xmlns:s="clr-namespace:CommonFrontEnd.Common"
              xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
              d:DesignHeight="530" d:DesignWidth="700" Width="700">

    <Grid Margin="0,-2,0,2">
        <Grid.RowDefinitions>
            <RowDefinition Height="26*"/>
            <RowDefinition Height="102*"/>
            <RowDefinition Height="147*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.RowSpan="3">
            <GroupBox Height="50" Margin="0,0,0,0">
                <Grid>
                    <Label x:Name="label" Content="Client Search" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="16,-2,0,0"/>
                    <s:ClickSelectTextBox x:Name="ClientSearch" FontWeight="Bold" TabIndex="1" Text="{Binding txtClientSearch,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" CharacterCasing="Upper"  VerticalAlignment="Top" Width="120" Margin="3,19,0,0" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:InvokeCommandAction Command="{Binding txtClientSearch_TextChanged}" CommandParameter="{Binding ElementName=ClientSearch}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </s:ClickSelectTextBox>
                    <Button x:Name="button" TabIndex="2" Content="Go" Command="{Binding btnGo_Click}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="41" Margin="135,20,0,0"/>
                </Grid>

            </GroupBox>



            <DataGrid Name="DataGridClientInfo" TabIndex="3" VerticalAlignment="Top" Width="auto" CanUserDeleteRows="False" Margin="0,2,0,0" ItemsSource="{Binding ObjClientCollection,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedItem="{Binding SelectedClient,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" AutoGenerateColumns="False" GridLinesVisibility="All"
                      SelectionMode="Extended" SelectionUnit="FullRow" AlternationCount="2" CanUserResizeColumns="True" CanUserResizeRows="True" Grid.Column="0" Grid.Row="0" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible" VirtualizingStackPanel.VirtualizationMode="Recycling"
                      EnableColumnVirtualization="True" EnableRowVirtualization="True" CanUserAddRows="false" Visibility="{Binding VisibilityNSECurrencyCOGrid}" Height="199">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                    </Style>
                </DataGrid.RowStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChanged}"/>
                    </i:EventTrigger>

                </i:Interaction.Triggers>

                <DataGrid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="3"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Sr No" IsReadOnly="True" Visibility="Hidden" MinWidth="95" CanUserSort="True" SortMemberPath="SerialNo">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding SerialNo,UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Text="{Binding ShortClientId,UpdateSourceTrigger=PropertyChanged}" x:Name="ShortClientId" Header="Short Client Id" IsReadOnly="True" Width="*" CanUserSort="True"/>-->
                    <DataGridTemplateColumn Header="Short Client Id" IsReadOnly="True" MinWidth="95" CanUserSort="True" SortMemberPath="ShortClientId">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ShortClientId,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--<DataGridTextColumn Binding="{Binding CompleteClientId,UpdateSourceTrigger=PropertyChanged}" x:Name="CompleteClientId" Header="Complete Client Id" IsReadOnly="True" Width="*" CanUserSort="True"/>-->
                    <DataGridTemplateColumn Header="Complete Client Id" IsReadOnly="True" MinWidth="95" CanUserSort="True" SortMemberPath="CompleteClientId">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CompleteClientId,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Binding="{Binding FirstName,UpdateSourceTrigger=PropertyChanged}" x:Name="FirstName" Header="First Name" IsReadOnly="True" Width="*" CanUserSort="True"/>-->
                    <DataGridTemplateColumn Header="First Name" IsReadOnly="True" MinWidth="95" CanUserSort="True" SortMemberPath="FirstName">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding FirstName,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn x:Name="MiddleName" Header="Middle Name" IsReadOnly="True" Width="*" MinWidth="90" CanUserSort="True"/>-->
                    <!--<DataGridTextColumn Binding="{Binding LastName,UpdateSourceTrigger=PropertyChanged}" x:Name="LastName" Header="Last Name" IsReadOnly="True" Width="*"  CanUserSort="True"/>-->
                    <DataGridTemplateColumn Header="Last Name" IsReadOnly="True" MinWidth="95" CanUserSort="True" SortMemberPath="LastName">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding LastName,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Binding="{Binding ClientType,UpdateSourceTrigger=PropertyChanged}" x:Name="ClientType" Header="Client Type" IsReadOnly="True" Width="*"  CanUserSort="True"/>-->
                    <DataGridTemplateColumn Header="Client Type" IsReadOnly="True" MinWidth="95" CanUserSort="True" SortMemberPath="ClientType">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ClientType,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Binding="{Binding ClientStatus,UpdateSourceTrigger=PropertyChanged}" x:Name="ClientStatus" Header="Client Status" IsReadOnly="True" Width="*"  CanUserSort="True"/>-->
                    <DataGridTemplateColumn Header="Client Status" IsReadOnly="True"  CanUserSort="True" SortMemberPath="ClientStatus">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ClientStatus,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Binding="{Binding MobileNumber,UpdateSourceTrigger=PropertyChanged}" x:Name="MobileNumber" Header="Mobile Number" IsReadOnly="True" Width="*"  CanUserSort="True"/>-->
                    <DataGridTemplateColumn Header="Mobile Number" IsReadOnly="True"  CanUserSort="True" SortMemberPath="MobileNumber">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding MobileNumber,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Binding="{Binding EmailID,UpdateSourceTrigger=PropertyChanged}" x:Name="EmailID" Header="Email ID" IsReadOnly="True" Width="*"  CanUserSort="True"/>-->
                    <DataGridTemplateColumn Header="EmailID" IsReadOnly="True"  CanUserSort="True" SortMemberPath="EmailID">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding EmailID,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Binding="{Binding CPCodeDerivative,UpdateSourceTrigger=PropertyChanged}" x:Name="CPCodeDerivative" Header="CP Code Derivative" IsReadOnly="True" Width="*"  CanUserSort="True"/>-->
                    <DataGridTemplateColumn Header="CP Code Derivative" IsReadOnly="True"  CanUserSort="True" SortMemberPath="CPCodeDerivative">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CPCodeDerivative,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Binding="{Binding CPCodeCurrency,UpdateSourceTrigger=PropertyChanged}" x:Name="CPCodeCurrency" Header="CP Code Currency" IsReadOnly="True" Width="*"  CanUserSort="True"/>-->
                    <DataGridTemplateColumn Header="CP Code Currency" IsReadOnly="True"  CanUserSort="True" SortMemberPath="CPCodeCurrency">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CPCodeCurrency,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>
            <!--<TextBlock x:Name="textBlock1" HorizontalAlignment="Left" Margin="3,5,0,0" TextWrapping="Wrap" Text="Note: OE Display- Display on Order Entry (Normal/ Swift/Multi-Legged) Reply Text Field. Two Fields are preferred." VerticalAlignment="Top"/>-->


            <StackPanel Height="200">

                <GroupBox Margin="0,2,0,-2" FontWeight="Bold" Header="Clients Detail Information" Height="200">
                    <Grid Height="180" Margin="-2,0,2,-2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="27*"/>
                            <RowDefinition Height="25*"/>
                            <RowDefinition Height="32*"/>
                            <RowDefinition Height="45*"/>
                            <RowDefinition Height="51*"/>
                        </Grid.RowDefinitions>

                        <Label x:Name="label1" FontWeight="Bold" Content="Short Client Id" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-4,5,0,0" Grid.RowSpan="2"/>
                        <!--<TextBox x:Name="textBox1" Text="{Binding ShortClientIdtxt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Margin="90,5,0,0" Grid.RowSpan="2"/>-->
                        <s:ClickSelectTextBox x:Name="ShortClientIdtxt" TabIndex="4" MaxLength="11" Text="{Binding ShortClientIdtxt,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Margin="92,5,0,0" Grid.RowSpan="2" CharacterCasing="Upper">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding ShortClientIdtxt_TextChanged}" CommandParameter="{Binding ElementName=ShortClientIdtxt}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </s:ClickSelectTextBox>

                        <Label x:Name="label2" FontWeight="Bold" Content="Complete Client Id" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="221,4,0,0" Grid.RowSpan="2"/>
                        <!--<TextBox x:Name="textBox2" Text="{Binding CompleteClientIdtxt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Margin="339,5,0,0" Grid.RowSpan="2"/>-->
                        <s:ClickSelectTextBox x:Name="CompleteClientIdtxt" TabIndex="5" MaxLength="11" CharacterCasing="Upper" Text="{Binding CompleteClientIdtxt,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Margin="339,5,0,0" Grid.RowSpan="2">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding CompleteClientIdtxt_TextChanged}" CommandParameter="{Binding ElementName=CompleteClientIdtxt}">
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </s:ClickSelectTextBox>
                        <CheckBox x:Name="FirstNameOEChecked" Visibility="Collapsed" FontWeight="Bold" IsChecked="{Binding FirstNameOEChecked}"  Content="OE Display" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="216,6,0,0" Grid.Row="1"/>
                        <Label x:Name="label3" FontWeight="Bold" Content="First Name" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-4,3,0,0" Grid.Row="1" Grid.RowSpan="2"/>
                        <s:ClickSelectTextBox x:Name="FirstNametxt"  TabIndex="7" CharacterCasing="Upper"  MaxLength="18" Text="{Binding FirstNametxt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Margin="92,3,0,0" Grid.Row="1" Grid.RowSpan="2">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding FirstNametxt_TextChanged}" CommandParameter="{Binding ElementName=FirstNametxt}">
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </s:ClickSelectTextBox>
                        <Label x:Name="label3_Copy" FontWeight="Bold" Content="Last Name" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="220,1,0,0" Grid.Row="1" Grid.RowSpan="2"/>
                        <CheckBox x:Name="checkBox_Copy1" Visibility="Collapsed" IsChecked="{Binding LastNameOEChecked}" FontWeight="Bold" Content="OE Display" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="561,6,0,0" Grid.Row="1"/>
                        <s:ClickSelectTextBox x:Name="LastNametxt" TabIndex="8" MaxLength="18" CharacterCasing="Upper" Text="{Binding LastNametxt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Margin="339,3,0,0" Grid.Row="1" Grid.RowSpan="2">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding LastNametxt_TextChanged}" CommandParameter="{Binding ElementName=LastNametxt}">
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </s:ClickSelectTextBox>
                        <Label x:Name="label3_Copy1" FontWeight="Bold" Content="Mobile Number" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="-5,0,0,4" Grid.Row="2"/>
                        <s:ClickSelectTextBox x:Name="MobileNumbertxt" TextAlignment="Right" TabIndex="9"  MaxLength="14" Text="{Binding MobileNumbertxt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Margin="92,3,0,0" Grid.Row="2">

                            <!--<i:Interaction.Behaviors>
                                <behaviours:TextBoxInputRegExBehaviour RegularExpression="^\d+$" MaxLength="9" EmptyValue="0" />
                            </i:Interaction.Behaviors>-->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding MobileNumbertxt_TextChanged}" CommandParameter="{Binding ElementName=MobileNumbertxt}">
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </s:ClickSelectTextBox>
                        <CheckBox x:Name="checkBox_Copy2" IsChecked="{Binding MobileNumberOEChecked}" Visibility="Collapsed" FontWeight="Bold" Content="OE Display" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="216,7,0,0" Grid.Row="2"/>
                        <Label x:Name="label3_Copy2" FontWeight="Bold" Content="Email ID" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="221,3,0,0" Grid.Row="2"/>
                        <s:ClickSelectTextBox x:Name="EmailIDtxt" TabIndex="10" MaxLength="50" Text="{Binding EmailIDtxt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap"  VerticalAlignment="Top" Width="338" Margin="339,3,0,0" Grid.Row="2">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding EmailIDtxt_TextChanged}" CommandParameter="{Binding ElementName=EmailIDtxt}">
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </s:ClickSelectTextBox>
                        <CheckBox x:Name="EmailIDOEChecked" IsChecked="{Binding EmailIDOEChecked}" FontWeight="Bold" Visibility="Collapsed" Content="OE Display" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="561,6,0,0" Grid.Row="2"/>
                        <Label x:Name="label3_Copy3" FontWeight="Bold" Content="CP Code Derivative" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="33,0,0,23.082" Grid.Row="2" Grid.RowSpan="2"/>
                        <Label x:Name="label3_Copy4" FontWeight="Bold" Content="CP Code Derivative Name" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="201,0,0,20.082" Grid.Row="2" Grid.RowSpan="2"/>
                        <s:ClickSelectTextBox x:Name="CPCodeDerivativetxt" TabIndex="12" CharacterCasing="Upper" IsEnabled="{Binding CPCodeDerivativetxtEnable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"     Text="{Binding CPCodeDerivativetxt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Height="23" TextWrapping="Wrap"  VerticalAlignment="Top"  Grid.Row="3" MaxLength="12" Margin="38,22,0,0" Width="113">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding CPCodeDerivativetxt_TextChanged}" CommandParameter="{Binding ElementName=CPCodeDerivativetxt}">
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </s:ClickSelectTextBox>
                        <TextBox x:Name="CPCodeDerivativeNametxt" TabIndex="13" Background="LightGray"  IsReadOnly="True" Text="{Binding CPCodeDerivativeNametxt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left"   Height="23" TextWrapping="Wrap"  VerticalAlignment="Top" Width="375"  Grid.Row="3" Margin="168,22,0,0">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding CPCodeDerivativeNametxt_TextChanged}" CommandParameter="{Binding ElementName=CPCodeDerivativeNametxt}">
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <CheckBox x:Name="CPCodeDerChecked" IsChecked="{Binding CPCodeDerivativeChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding CPCodeDerivativeEnable}" TabIndex="11"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="13,27,0,0" Grid.Row="3"/>
                        <CheckBox x:Name="CPCodeCurChecked" TabIndex="14" IsChecked="{Binding CPCodeCurrencyChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding CPCodeCurrencyEnable}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="13,21,0,0" Grid.Row="4"/>
                        <s:ClickSelectTextBox x:Name="CPCodeCurrencytxt" CharacterCasing="Upper" MaxLength="12" TabIndex="15" IsEnabled="{Binding CPCodeCurrencytxtEnable,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   Text="{Binding CPCodeCurrencytxt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap"  VerticalAlignment="Top" Width="113" Margin="38,17,0,0" Grid.Row="4">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding CPCodeCurrencytxt_TextChanged}" CommandParameter="{Binding ElementName=CPCodeCurrencytxt}">
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </s:ClickSelectTextBox>
                        <Label x:Name="label3_Copy5" FontWeight="Bold" Content="CP Code Currency" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="33,0,0,30" Grid.Row="3" Grid.RowSpan="2"/>
                        <Label x:Name="label3_Copy6" FontWeight="Bold" Content="CP Code Currency Name" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="201,0,0,30" Grid.Row="3" Grid.RowSpan="2"/>
                        <TextBox x:Name="CPCodeCurrencyNametxt" TabIndex="16" IsReadOnly="True" Background="LightGray"   Text="{Binding CPCodeCurrencyNametxt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap"  VerticalAlignment="Top" Width="375" Margin="168,17,0,0" Grid.Row="4">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding CPCodeCurrencyNametxt_TextChanged}" CommandParameter="{Binding ElementName=CPCodeCurrencyNametxt}">
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <Label x:Name="label4" Content="Client Type" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="470,4,0,0" Grid.RowSpan="2"/>
                        <ComboBox x:Name="comboBox" TabIndex="6" ItemsSource="{Binding ClientType1,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedItem="{Binding SelectedClientType1}"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Margin="556,5,0,0"/>



                    </Grid>

                </GroupBox>
            </StackPanel>
            <Button x:Name="button1"  TabIndex="17" IsDefault="True" Command="{Binding btnAdd_Click}"  CommandParameter="{Binding ElementName=DataColl}" HorizontalAlignment="Left" FontWeight="Bold" Width="90" Margin="29,15,0,0">
            <AccessText>_Add</AccessText>
            </Button>
           
            <Button x:Name="button1_Copy" Width="90" TabIndex="19" Command="{Binding btnEdit_Click}" CommandParameter="{Binding ElementName=DataColl}" HorizontalAlignment="Left" FontWeight="Bold" Margin="166,-20,0,0">
                <AccessText>_Edit</AccessText>
            </Button>
            <Button x:Name="button1_Cop12y" Width="90" TabIndex="18" Visibility="Collapsed"  Command="{Binding BtnLoadFile}" CommandParameter="{Binding ElementName=DataColl}" HorizontalAlignment="Left" FontWeight="Bold" Margin="132,-20,0,0">
                <AccessText>_Load</AccessText>
            </Button>


            <Button x:Name="button1_Copy1" Width="90" TabIndex="20" Visibility="Visible" Command="{Binding btnSaveinCSV}" HorizontalAlignment="Left" FontWeight="Bold" Content="SaveAs" Margin="299,-20,0,0"/>
            
            <Button x:Name="button1_Copy2" Width="90" TabIndex="21" Command="{Binding btnDelete_Click}" HorizontalAlignment="Left" FontWeight="Bold"  Margin="433,-20,0,0">
            <AccessText>_Delete</AccessText>
            </Button>
            <Button x:Name="button1_Copy3" Width="90" TabIndex="22" Command="{Binding btnDeleteAll_Click}" CommandParameter="{Binding ElementName = DataGridClientInfo, Path = ObjClientCollection}" FontWeight="Bold" HorizontalAlignment="Left" Margin="559,-20,0,0">
            <AccessText>_Delete All</AccessText>
            </Button>
            <Button x:Name="button1_Copy4" Width="90" Visibility="Collapsed" Command="{Binding btnApply_Click}" FontWeight="Bold" HorizontalAlignment="Left" Content="Apply" Margin="574,-20,36,0"/>
            <Label x:Name="label5" Margin="12,10,0,0" Content="Reply" HorizontalAlignment="Left" FontWeight="Bold"/>
            <s:ClickSelectTextBox x:Name="Replytxt" Height="23" TabIndex="23"  Text="{Binding Replytxt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="64,-25,0,0" HorizontalAlignment="Left" TextWrapping="Wrap"  IsReadOnly="True" Width="590">
                <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding Replytxt_TextChanged}" CommandParameter="{Binding ElementName=Replytxt}">
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->
            </s:ClickSelectTextBox>
        



            <!--<DataGrid.Columns>
                <DataGridTemplateColumn Header="Short Client Id" IsReadOnly="True" x:Name="FirstNameColumn" CanUserSort="True" MinWidth="75" SortMemberPath="ScripId">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding SCID,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Complete Client Id" x:Name="MiddleNameColumn" IsReadOnly="True" CanUserSort="True" MinWidth="75" SortMemberPath="ScripCode1" Visibility="Visible">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ScripCode,UpdateSourceTrigger=PropertyChanged}" TextAlignment="Right" TextWrapping="NoWrap"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="First Name" IsReadOnly="True" SortMemberPath="ExchangeCode" CanUserSort="True" MinWidth="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock  Text="{Binding ExchangeCode,UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:#}'}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Middle Name" IsReadOnly="True" SortMemberPath="ScripId" MinWidth="95">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ScripId,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Last Name" IsReadOnly="True" SortMemberPath="ScripName" MinWidth="95">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ScripName,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Client Type" IsReadOnly="True" SortMemberPath="PartitionId" MinWidth="75">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding PartitionId,UpdateSourceTrigger=PropertyChanged}" TextAlignment="Right" TextWrapping="NoWrap"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Trading Status" IsReadOnly="True" MinWidth="95" SortMemberPath="InstrumentType">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding InstrumentType,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Mobile Number" IsReadOnly="True" MinWidth="85" SortMemberPath="GroupName">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding GroupName,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Email ID" IsReadOnly="True" MinWidth="85" SortMemberPath="ScripType">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ScripType,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="CP Code Derivative" IsReadOnly="True" MinWidth="85" SortMemberPath="FaceValue">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding FaceValue,UpdateSourceTrigger=PropertyChanged}" TextAlignment="Right" TextWrapping="NoWrap"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="CP Code Currency" IsReadOnly="True" MinWidth="85" SortMemberPath="MarketLot">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding MarketLot,UpdateSourceTrigger=PropertyChanged}" TextAlignment="Right" TextWrapping="NoWrap"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Salutation" IsReadOnly="True" MinWidth="85" SortMemberPath="TickSize">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding TickSize,UpdateSourceTrigger=PropertyChanged}" TextAlignment="Right" TextWrapping="NoWrap"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Pan Card Number" IsReadOnly="True" MinWidth="90" SortMemberPath="BseExclusive">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding BseExclusive,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Status" IsReadOnly="True" MinWidth="50" SortMemberPath="Status">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Status,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Ex Div Date" IsReadOnly="True" MinWidth="80" SortMemberPath="ExDivDate">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ExDivDate,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="No Del End Date" IsReadOnly="True" MinWidth="100" SortMemberPath="NoDelEndDate">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding NoDelEndDate,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="No Del Start Date" IsReadOnly="True" MinWidth="110" SortMemberPath="NoDelStartDate">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding NoDelStartDate,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="New Tick Size" IsReadOnly="True" MinWidth="95" SortMemberPath="NewTickSize">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding NewTickSize,UpdateSourceTrigger=PropertyChanged}" TextAlignment="Right" TextWrapping="NoWrap"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="ISIN Code" IsReadOnly="True" MinWidth="90" SortMemberPath="IsinCode">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding IsinCode,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Call Auction Indicator" IsReadOnly="True" MinWidth="130" SortMemberPath="CallAuctionIndicator">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding CallAuctionIndicator,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Bc Start Date" IsReadOnly="True" MinWidth="95" SortMemberPath="BcStartDate">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding BcStartDate,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Ex Bonus Date" IsReadOnly="True" MinWidth="95" SortMemberPath="ExBonusDate">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ExBonusDate,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Ex Right Date" IsReadOnly="True" MinWidth="95" SortMemberPath="ExRightDate">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ExRightDate,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Bc End Date" IsReadOnly="True" MinWidth="95" SortMemberPath="BcEndDate">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding BcEndDate,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                -->
            <!--
                -->
            <!----><!--


            </DataGrid.Columns>
        </DataGrid>-->







        </StackPanel>

    </Grid>
</UserControl>
