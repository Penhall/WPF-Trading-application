<Window x:Class="CommonFrontEnd.View.OpenInterest"
        x:Name="OpnInterest"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CommonFrontEnd.View"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d" ShowInTaskbar="False"
        Title="OpenInterest" Height="385" Width="580" Style="{DynamicResource DefaultFont}">
    <Window.Resources>
        <ResourceDictionary Source="/Themes/DefaultFont.xaml"></ResourceDictionary>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Path=ShortCut_Escape}" CommandParameter="{Binding ElementName=OpnInterest}"/>
            <!--<i:InvokeCommandAction Command="{Binding Path=LoadNPProgressBarWindow}"/>-->
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding ShortCut_Escape}" CommandParameter="{Binding ElementName=OpnInterest}"/>
    </Window.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="489*"/>
            <ColumnDefinition Width="83*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="3"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="3"></RowDefinition>
            <RowDefinition Height="300"></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="1" Grid.ColumnSpan="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition Height="2"></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <TextBlock Text="Exchange" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left"></TextBlock>
                <ComboBox Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Width="60" ItemsSource="{Binding listExchange}" SelectedItem="{Binding cmbSelectedExchange}"></ComboBox>

                <TextBlock Text="Segment" Grid.Row="0" Grid.Column="3" HorizontalAlignment="Left"></TextBlock>
                <ComboBox Grid.Row="2" Grid.Column="3" HorizontalAlignment="Left" Width="60" ItemsSource="{Binding listSegment}" SelectedItem="{Binding cmbSelectedSegment}"></ComboBox>


                <TextBlock Text="Cur/Idx/Stk" Grid.Row="0" Grid.Column="5" HorizontalAlignment="Left"></TextBlock>
                <ComboBox Grid.Row="2" Grid.Column="5" HorizontalAlignment="Left" Width="60" ItemsSource="{Binding listCurrIdxSdk,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedItem="{Binding cmbSelectedlistCurrIdxSdk,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"></ComboBox>

                <TextBlock Text="Asset" Grid.Row="0" Grid.Column="7" HorizontalAlignment="Left"></TextBlock>
                <ComboBox Grid.Row="2" Grid.Column="7" HorizontalAlignment="Left" Width="60" ItemsSource="{Binding listAsset,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedItem="{Binding cmbSelectedlistAsset,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"></ComboBox>

                <TextBlock Text="F/O" Grid.Row="0" Grid.Column="9" HorizontalAlignment="Left"></TextBlock>
                <ComboBox Grid.Row="2" Grid.Column="9" HorizontalAlignment="Left" Width="60" ItemsSource="{Binding listFO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedItem="{Binding cmbSelectedlistFO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"></ComboBox>

                <TextBlock Text="C/P" Grid.Row="0" Grid.Column="11" HorizontalAlignment="Left"></TextBlock>
                <ComboBox Grid.Row="2" Grid.Column="11" HorizontalAlignment="Left" Width="55" IsEnabled="{Binding isEnableCP,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" ItemsSource="{Binding listCallPut,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedItem="{Binding cmbSelectedCallPut,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"></ComboBox>

                <GroupBox Grid.Column="13" Grid.RowSpan="3" Header="OI">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="3"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <RadioButton x:Name="rdbcontract" Content="Contract" Grid.Row="0" Grid.Column="0" IsChecked="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked" >
                                    <i:InvokeCommandAction Command="{Binding Path=OIUpdateCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </RadioButton>
                        <RadioButton x:Name="rdbQty" Content="Qty" Grid.Row="0" Grid.Column="2" IsChecked="{Binding IsQtyChecked}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked" >
                                    <i:InvokeCommandAction Command="{Binding Path=QtyUpdateCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </RadioButton>
                    </Grid>
                </GroupBox>
                <Button Grid.Row="3" Grid.Column="15" HorizontalAlignment="Right"  Width="75" Command="{Binding FetchFreshOI}">Refresh</Button>
            </Grid>
        </StackPanel>
        <DataGrid Grid.Row="3" HorizontalAlignment="Left" Name="DataGridOI" VerticalAlignment="Top" Width="545"  CanUserDeleteRows="False"
                              ItemsSource="{Binding ObjOpenInterstCollection,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" AutoGenerateColumns="False" GridLinesVisibility="All"
                               SelectionMode="Extended" SelectionUnit="FullRow" AlternationCount="2"
                              CanUserSortColumns="True" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                      VirtualizingStackPanel.VirtualizationMode="Recycling"
                      EnableColumnVirtualization="True" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible"
                      EnableRowVirtualization="True" CanUserAddRows="false" Grid.ColumnSpan="2" >
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Series Code" IsReadOnly="True" CanUserSort="True" MinWidth="75" SortMemberPath="SeriesCode">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding SeriesCode,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Series Name" IsReadOnly="True" CanUserSort="True" MinWidth="75" SortMemberPath="SeriesName">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding SeriesName,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Series ID" IsReadOnly="True" CanUserSort="True" MinWidth="75" SortMemberPath="SeriesID">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding SeriesID,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="OI" IsReadOnly="True" CanUserSort="True" MinWidth="75" SortMemberPath="OI"  >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding OI,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Change In OI" IsReadOnly="True" CanUserSort="True" MinWidth="75" SortMemberPath="ChangeInOI" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ChangeInOI,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Day's TTV" IsReadOnly="True" CanUserSort="True" MinWidth="75" SortMemberPath="DayTTV">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DayTTV,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="OI Value(In Lakh)" IsReadOnly="True" CanUserSort="True" MinWidth="75" SortMemberPath="OIValue">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding OIValue,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>
    </Grid>
</Window>
