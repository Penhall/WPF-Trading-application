<Common:TitleBarHelperClass x:Class="CommonFrontEnd.View.MarketWatch"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:CommonFrontEnd.ViewModel"
        xmlns:uc="clr-namespace:CommonFrontEnd.View"
        xmlns:Common="clr-namespace:CommonFrontEnd.Common"   
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        x:Name="myWindow"
        Width="{Binding ClassicWidth,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
        Height="{Binding ClassicHeight,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
        Top="{Binding TopPosition,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
        Left="{Binding LeftPosition,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"       
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"       
        xmlns:usercontrol="clr-namespace:CommonFrontEnd.View.UserControls" Background="{DynamicResource WindowBackgroundBrush}" 
        Title="{Binding TitleTouchLine,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
        ShowInTaskbar="False" Icon="../Images/touchline01.png" 
        ResizeMode="CanResizeWithGrip">

    <Common:TitleBarHelperClass.MenuItems>
        <Common:SystemMenuItem Command="{Binding Path=ExportExcel}" Header="Export To CSV" Id="100"/>
        <Common:SystemMenuItem Command="{Binding Path=SaveProfile}" Header="Save as default profile" Id="101"/>
        <!--<vm:SystemMenuItem Command="{Binding GridLines_visible}" Header="{Binding GridLinesVisibility}"/>-->
        <!--<vm:SystemMenuItem Command="{Binding Path=ExportAsImage}" Header="Export To Image" Id="101"/>-->
    </Common:TitleBarHelperClass.MenuItems>

    <Window.InputBindings>
        <KeyBinding Key="Insert" Command="{Binding ShortCut_EnterScrips}" CommandParameter="{x:Type usercontrol:OrderEntryUC}"/>
        <KeyBinding Key="Escape" Command="{Binding ShortCut_Escape}" CommandParameter="{Binding ElementName=myWindow}"/>
        <!--<KeyBinding Key="Delete" Modifiers="Shift" Command="{Binding Delete_Scrips}"/>
        <KeyBinding Key="Enter" Modifiers="Alt" Command="{Binding ShortCut_Enter}"/>-->
        <KeyBinding Key="H" Modifiers="Alt" Command="{Binding HideShowFilter}" CommandParameter="{Binding ElementName=FilterToggleBtn}"/>
        <KeyBinding Key="S" Modifiers="Alt" Command="{Binding ShowFilter}" CommandParameter="{Binding ElementName=FilterToggleBtn}"/>
        <KeyBinding Key="C" Modifiers="Alt" Command="{Binding ClearFilterButton}"/>
        <KeyBinding Key="F" Modifiers="Alt" Command="{Binding FontSelect}" CommandParameter="{Binding ElementName=dataGridView1}"/>
    </Window.InputBindings>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing" >
            <cmd:EventToCommand Command="{Binding Window_Closing}"/>
        </i:EventTrigger>

        <!--<i:EventTrigger EventName="LocationChanged">
            <i:InvokeCommandAction Command="{Binding myLocationChanged}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="SizeChanged">
            <i:InvokeCommandAction Command="{Binding myLocationChanged}"/>
        </i:EventTrigger>-->
    </i:Interaction.Triggers>

    <Window.Resources>
        <Common:ValueConvertor x:Key="ValueConvertor"/>
        <vm:MarketWatchVM x:Key="ClassicVM"/>

        <ControlTemplate TargetType="TextBoxBase" x:Key="txt">
            <Border CornerRadius="5" BorderThickness="1" BorderBrush="Black" x:Name="Bd" Background="AliceBlue">
                <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled">
                    <Setter Property="Panel.Background" TargetName="Bd">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                    </Trigger.Value>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="HoldOrResumeButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="Content">
                <Setter.Value>
                    <TextBlock>
                    <Underline>H</Underline>ide Filter
                    </TextBlock>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <TextBlock>
                    <Underline>S</Underline>how Filter
                            </TextBlock>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TwitterTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="FontFamily" Value="Trebuchet MS" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="Padding" Value="4" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="#FFAAAAAA" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="FocusedOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="FocusedOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="DisabledOn">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="DisabledOff">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Collapsed}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Border Margin="3" x:Name="BorderBase" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
                            <Border Margin="0" Background="#FFECF5FD" x:Name="FocusVisualElement" BorderBrush="#FFECF5FD" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="7" IsHitTestVisible="False" Opacity="0" >
                                <Border Background="#FFE3F1FC" x:Name="InnerFocusVisualElement" BorderBrush="#FFE3F1FC" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" IsHitTestVisible="False" Opacity="1" >
                                    <Border Background="#FFD9ECFA" x:Name="InnerFocusVisualElement2" BorderBrush="#FFD9ECFA" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Opacity="1" >
                                        <Border Background="{TemplateBinding Background}" x:Name="InnerFocusVisualElement3" BorderBrush="#FF7DBEF1" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Opacity="1" >
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                            <Label Foreground="DimGray"  Grid.Column="1" Margin="3" x:Name="TextPrompt" Content="{TemplateBinding Tag}" Visibility="Collapsed" Focusable="False"></Label>
                            <ScrollViewer Margin="3" x:Name="PART_ContentHost" Foreground="{TemplateBinding Foreground}" />
                            <Label Margin="3" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                               Visibility="Collapsed" Foreground="Black" FontFamily="Arial"/>
                            <Border Margin="3" x:Name="DisabledVisualElement" Background="#A5FFFFFF" BorderBrush="#59C0C0C0" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Visibility="Collapsed" />
                            <Border Margin="3" x:Name="ReadOnlyVisualElement" Background="#66FFFFFF" CornerRadius="2.75" Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="False"></Condition>
                                    <Condition Property="Text" Value=""></Condition>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Visibility" TargetName="TextPrompt" Value="Visible"></Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource FocusedOff}" x:Name="FocusedOff_BeginStoryboard" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}" x:Name="FocusedOn_BeginStoryboard" />
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource DisabledOn}" x:Name="DisabledOn_BeginStoryboard" />
                                </Trigger.EnterActions>

                                <Setter Property="Foreground" Value="Silver" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource DisabledOff}" />
                                </Trigger.EnterActions>

                                <Setter Property="Foreground" Value="#FF000000" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <DockPanel FocusManager.FocusedElement="{Binding ElementName=UserDefCsv}" KeyboardNavigation.TabNavigation="Continue">
        <ToolBar DockPanel.Dock="Top" KeyboardNavigation.TabNavigation="Continue">
            <StackPanel Margin="5" Orientation="Vertical">
                <ToggleButton Command="{Binding BtnHideShowFilter}" Style="{StaticResource HoldOrResumeButton}" Height="23" x:Name="FilterToggleBtn">
                </ToggleButton>
            </StackPanel>

            <Separator/>

            <StackPanel Margin="5" Orientation="Vertical">
                <Button Command="{Binding ClearFilterButton}" Height="23">
                    <TextBlock>
                    <Underline>C</Underline>lear Filter
                    </TextBlock>
                </Button>
            </StackPanel>

            <Separator/>
            <ComboBox ItemsSource="{Binding MarketsCombo}" SelectedItem="{Binding MarketsComboSelectedItem}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChanged}">
                            <i:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource ValueConvertor}">
                                    <Binding ElementName="dataGridView1"/>
                                    <Binding ElementName="SnPSensexTab"/>
                                </MultiBinding>
                            </i:InvokeCommandAction.CommandParameter>
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <Separator/>


            <!--<ComboBox ItemsSource="{Binding MarketMoversCombo}" SelectedItem="{Binding MarketMoversComboSelecteditem}" Width="100"/>
            <Separator/>-->


            <!--<ComboBox ItemsSource="{Binding GroupCombo}" SelectedItem="{Binding GroupComboSelectedItem}" Width="100"></ComboBox>
            <Separator/>-->

            <ComboBox ItemsSource="{Binding ScripProfilingCombo}" SelectedItem="{Binding ScripProfComboSelectedItem}" Name="UserDefCsv">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChanged_UserDefined}">
                            <i:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource ValueConvertor}">
                                    <Binding ElementName="dataGridView1"/>
                                    <Binding ElementName="SnPSensexTab"/>
                                </MultiBinding>
                            </i:InvokeCommandAction.CommandParameter>
                        </i:InvokeCommandAction>

                    </i:EventTrigger>

                </i:Interaction.Triggers>
            </ComboBox>
            <Separator/>
            <StackPanel Margin="5" Orientation="Vertical">
                <Button Command="{Binding FontSelect}" CommandParameter="{Binding ElementName=dataGridView1}" Height="23">
                    <TextBlock>
                    Change <Underline>F</Underline>ont
                    </TextBlock>
                </Button>
            </StackPanel>

        </ToolBar>

        <Grid>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding OnMouseLeftButtonUp}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseMove">
                    <i:InvokeCommandAction Command="{Binding OnMouseMove}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <TabControl HorizontalAlignment="Stretch" VerticalAlignment="Top" x:Name="SnPSensexTab" FocusManager.IsFocusScope="False" Height="23">
                <TabControl.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding DeleteTabItems}" CommandParameter="{Binding ElementName=SnPSensexTab}"/>
                </TabControl.InputBindings>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding TabSelectionChanged_Event}">
                            <i:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource ValueConvertor}">
                                    <Binding ElementName="dataGridView1"/>
                                    <Binding ElementName="SnPSensexTab"/>
                                </MultiBinding>
                            </i:InvokeCommandAction.CommandParameter>
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TabItem Header="Default" IsSelected="True" FontFamily="Verdana" FontWeight="Bold"/>
            </TabControl>

            <WrapPanel Orientation="Horizontal" Margin="0,24,0,0" Visibility="{Binding FilterVisibility}" HorizontalAlignment="Left" VerticalAlignment="Top">
                <TextBox Height="30" Text="{Binding Path=DataContext.txtScripID, 
                    RelativeSource={RelativeSource AncestorType={x:Type Grid}} ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,0" 
                         Width="{Binding ActualWidth, ElementName=ScripIDColumn}" HorizontalAlignment="Left"
                             Style="{StaticResource TwitterTextBoxStyle}" Foreground="Black" Tag="Scrip ID"/>
                <TextBox Height="30" Text="{Binding Path=DataContext.txtScripCode, 
                    RelativeSource={RelativeSource AncestorType={x:Type Grid}} ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Visibility="Visible"  Margin="0,0,0,0"
                         Width="{Binding ActualWidth, ElementName=ScripCodeColumn}" HorizontalAlignment="Left" 
                        Style="{StaticResource TwitterTextBoxStyle}" Foreground="Black" Tag="Scrip Code"/>
            </WrapPanel>

            <DataGrid HorizontalAlignment="Left" Margin="0,52,0,0" VerticalAlignment="Top" Name="dataGridView1" SelectionUnit="FullRow" Grid.Row="0"
                  AutoGenerateColumns="False" AlternationCount="2" GridLinesVisibility="{Binding GrdlineVisible}"
                   Tag="{Binding ElementName=myWindow}" SelectionMode="Extended" ScrollViewer.IsDeferredScrollingEnabled="True" EnableRowVirtualization="True"
                  ItemsSource="{Binding  ObjTouchlineDataCollection,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                  VirtualizingStackPanel.VirtualizationMode="Recycling" SelectedItem="{Binding SelectedItem, Mode=TwoWay}" IsReadOnly="True"
                  VirtualizingStackPanel.IsVirtualizing="True" FontWeight="{Binding DataGridFontWeight}" FontFamily="{Binding DataGridFontFamily}" 
                  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <!--helpers:RowDoubleClickHandler.MethodName="DataGrid_DoubleClick"-->
                      
                <i:Interaction.Triggers>
                    <!--<i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding DataGridDoubleClick}"/>
                    </i:EventTrigger>-->
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding ScrollCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewKeyDown">
                        <cmd:EventToCommand Command="{Binding KeyDown_Event}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <DataGrid.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding Delete_Scrips}"/>
                    <KeyBinding Key="Enter" Command="{Binding ShortCut_Enter}"/>
                </DataGrid.InputBindings>

                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <!--<MenuItem Header="Menu item 1">-->
                        <MenuItem Header="Export to CSV" Command="{Binding ExportExcel}"></MenuItem>
                        <!--<MenuItem Header="Colour Profiling"  Command="{Binding Path=PlacementTarget.Tag.ChangeColor, RelativeSource={RelativeSource Mode=FindAncestor,                                                                                         
                                                                           AncestorType=ContextMenu}}"></MenuItem>-->
                        <MenuItem Header="Add Scrips"  Command="{Binding ShortCut_EnterScrips}" CommandParameter="{x:Type usercontrol:OrderEntryUC}"></MenuItem>

                        <MenuItem Command="{Binding GridLines_visible}" Header="{Binding GridLinesVisibility}"/>
                        <MenuItem Command="{Binding Insert_Blank}" Header="Insert Blank Row"/>
                        <MenuItem Command="{Binding Delete_Scrips}" Header="Delete Row"/>
                        <!--</MenuItem>-->
                        <!--<MenuItem Header="Menu item 2" />-->
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Index}" Header="Index" Width="Auto" Visibility="Hidden">
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding ScriptId1}" Header="Script Id" Width="Auto" MinWidth="85" Visibility="Visible" x:Name="ScripIDColumn">
                    </DataGridTextColumn>


                    <DataGridTemplateColumn Header="Scrip Code" Width="Auto" MinWidth="85" Visibility="Visible" x:Name="ScripCodeColumn" SortMemberPath="Scriptcode1">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Scriptcode1,StringFormat='{}{0:#}', Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextAlignment="Right"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--<DataGridTextColumn Binding="{Binding Scriptcode1,StringFormat='{}{0:#}'}" Header="Scrip Code" Width="Auto" MinWidth="80" Visibility="Visible" x:Name="ScripCodeColumn">
                    </DataGridTextColumn>-->

                    <DataGridTemplateColumn Header="Buy Qty" Width="Auto" MinWidth="55" Visibility="Visible" CanUserSort="True" SortMemberPath="BuyQualtity1">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding BuyQualtity1, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:#}'}"  
                                       Background="{Binding PrevBuyQualtity1}" 
                                       Foreground="{Binding ForegroundColorBuyQuantity}" Name="Buy_Qty" TextAlignment="Right" TextWrapping="NoWrap"/>

                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="Buy Rate" Width="Auto" MinWidth="60" Visibility="Visible" CanUserSort="True" SortMemberPath="BuyRate1">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding BuyRate1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat=.00;.00;#}"
                                       Background="{Binding PrevBuyRate1}"
                                           Foreground="{Binding ForegroundBuyRate}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="Open Rate" Width="Auto" MinWidth="68" Visibility="Visible" CanUserSort="True" SortMemberPath="OpenRateL">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding OpenRateL,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat=.00;.00;#}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="Sell Qty" Width="Auto" MinWidth="55" Visibility="Visible" CanUserSort="True" SortMemberPath="SellQuantity1">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding SellQuantity1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat='{}{0:#}'}"
                                       Background="{Binding PrevSellQuantity1}"
                                         Foreground="{Binding ForegroundSellQ}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="Sell Rate" Width="Auto" MinWidth="58" Visibility="Visible" CanUserSort="True" SortMemberPath="SellRate1">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding SellRate1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat=.00;.00;#}"
                                       Background="{Binding PrevSellRate1}" 
                                        Foreground="{Binding ForegroundSellR}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="LTP" Width="Auto" MinWidth="40" Visibility="Visible" CanUserSort="True" SortMemberPath="LTP1">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <TextBlock Text="{Binding LTP1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat=.00;.00;#}" 
                                       Background="{Binding PrevLTP1}" 
                                        Foreground="{Binding ForegroundLTP}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="U/D" MinWidth="32" Visibility="Visible">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <Image Grid.Column="11" Stretch="None">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Source" Value="{x:Null}"/>
                                            <Style.Triggers>
                                                <DataTrigger Value="Blue" Binding="{Binding PrevLTP1}">
                                                    <Setter Property="Source" Value="../Images/Up.png"/>
                                                </DataTrigger>
                                                <DataTrigger Value="OrangeRed" Binding="{Binding PrevLTP1}">
                                                    <Setter Property="Source" Value="../Images/Down.PNG"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Header="Close Rate" Width="Auto" MinWidth="68" Visibility="Visible" CanUserSort="True" SortMemberPath="CloseRateL">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CloseRateL,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat=.00;.00;#}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="No of Bid" Width="Auto" MinWidth="75" Visibility="Visible" CanUserSort="True" SortMemberPath="NoofBidBuy1">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding NoofBidBuy1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat='{}{0:#}'}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="No of Ask" Width="Auto" MinWidth="75" Visibility="Visible" CanUserSort="True" SortMemberPath="NoOfBidSell1">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding NoOfBidSell1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat='{}{0:#}'}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="High Rate" Width="Auto" MinWidth="65" Visibility="Visible" CanUserSort="True" SortMemberPath="HighRateL">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding HighRateL,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat=.00;.00;#}"  TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Header="Low Rate" Width="Auto" MinWidth="65" Visibility="Visible" CanUserSort="True" SortMemberPath="LowRateL">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding LowRateL,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat=.00;.00;#}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="52H" Width="Auto" MinWidth="45" Visibility="Visible" CanUserSort="True" SortMemberPath="FiftyTwoHigh">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding FiftyTwoHigh,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat=.00;.00;#}"
                                           Background="{Binding FiftyTwoHighBColor}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="52L" Width="Auto" MinWidth="45" Visibility="Visible" CanUserSort="True" SortMemberPath="FiftyTwoLow">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding FiftyTwoLow,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat=.00;.00;#}"
                                           Background="{Binding FiftyTwoLowBColor}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="CorpAction" Width="Auto" MinWidth="70" Visibility="Hidden" CanUserSort="True" SortMemberPath="CorpActionValue">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CorpActionValue,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat=.00;.00;#}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="CT VOL" Width="Auto" MinWidth="60" Visibility="Visible" CanUserSort="True" SortMemberPath="CtVolume">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CtVolume,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat='{}{0:#}'}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="CT VAL" Width="Auto" MinWidth="60" Visibility="Visible" CanUserSort="True" SortMemberPath="CtValue">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CtValue,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat=.00;.00;#}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn  Header="Total Buy Qty" Width="Auto" MinWidth="80" Visibility="Visible" CanUserSort="True" SortMemberPath="TotBuyQtyL">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TotBuyQtyL,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat='{}{0:#}'}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Header="Total Sell Qty" Width="Auto" MinWidth="80" Visibility="Visible" CanUserSort="True" SortMemberPath="TotSellQtyL">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TotSellQtyL,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat='{}{0:#}'}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Header="WAP" Width="Auto" MinWidth="75" Visibility="Visible" CanUserSort="True" SortMemberPath="WtAvgRateL">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding WtAvgRateL,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,StringFormat=.00;.00;#}" TextAlignment="Right" TextWrapping="NoWrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </DockPanel>
    </Common:TitleBarHelperClass>
