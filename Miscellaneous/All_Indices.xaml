<Common:TitleBarHelperClass x:Class="CommonFrontEnd.View.All_Indices"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CommonFrontEnd.View" ShowInTaskbar="False"
        xmlns:Common="clr-namespace:CommonFrontEnd.Common"
        mc:Ignorable="d" WindowStyle="SingleBorderWindow"
        Title="All Indices" SizeToContent="WidthAndHeight" ResizeMode="CanResize" Style="{DynamicResource DefaultFont}" Loaded="TitleBarHelperClass_Loaded">
    <!--<Common:TitleBarHelperClass.MenuItems>
        <Common:SystemMenuItem Command="{Binding GridVisibilitySetting}" Header="{Binding GridLinesVisibility}" Id="200"/>
    </Common:TitleBarHelperClass.MenuItems>-->
        <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type TextBlock}" x:Key="CellRightAlign">
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Control.Margin" Value="2,0,4,0"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="CellLeftAlign">
                <Setter Property="Control.HorizontalAlignment" Value="Left" />
                <Setter Property="Control.Margin" Value="4,0,2,0"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="CellCenterAlign">
                <Setter Property="Control.HorizontalAlignment" Value="Center" />
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/DefaultFont.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="3"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="3"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition  Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ComboBox Name="cmbExchange" SelectedItem="{Binding selectedExchange}" ItemsSource="{Binding listExchange}" Grid.Row="0" Grid.Column="1" Width="65" HorizontalAlignment="Left" />
                <ComboBox Name="cmbIndices" SelectedItem="{Binding selectedIndex,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" ItemsSource="{Binding listIndices,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  Grid.Row="0" Grid.Column="3" Width="85" HorizontalAlignment="Left" />
                <Button Name="btnAddIndices" Grid.Row="0" Grid.Column="5" Width="45" HorizontalAlignment="Left" Command="{Binding addIndices}">
                    <AccessText>_Add</AccessText>
                </Button>
                <Button Name="btnDeleteIndices" Grid.Row="0" Grid.Column="7" Width="55" IsEnabled="{Binding UpperBody}" Command="{Binding deleteIndices}" HorizontalAlignment="Left">
                    <AccessText>_Delete</AccessText>
                </Button>
                <!--<Button Grid.Row="0" Grid.Column="8" Command="{Binding hidepanel}"  Height="15" Width="15" HorizontalAlignment="Right">
                    <StackPanel>
                        <Image Source="../Images/Delete.png" />
                    </StackPanel>
                </Button>-->
            </Grid>
        </StackPanel>
        <Common:CustomDataGrid  x:Name="AllIndicesDataGrid" SelectionUnit="FullRow" AutoGenerateColumns="False"  CanUserDeleteRows="True"
                            Grid.Row="3"   ItemsSource="{Binding ObjMinIndicesCollection,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" EnableRowVirtualization="True" GridLinesVisibility="{Binding GrdlineVisible, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  AlternatingRowBackground="#f7f7f7"
         SelectionMode="Extended" SelectedItemsList="{Binding SelectedIndicesRow,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" AlternationCount="2" CanUserAddRows="false" VirtualizingStackPanel.VirtualizationMode="Recycling"
         CanUserSortColumns="True" IsReadOnly="True" Height="Auto" Width="Auto" VirtualizingStackPanel.IsVirtualizing="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
        <!--<DataGrid Grid.Row="3" HeadersVisibility="None" ItemsSource="{Binding ObjMinIndicesCollection,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">-->
            <DataGrid.ContextMenu >
                <ContextMenu>
                    <MenuItem Command="{Binding GridVisibilitySetting}" CommandParameter="{Binding ElementName=AllIndicesDataGrid}" Header="{Binding GridLinesVisibility}"/>
                </ContextMenu>
                
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <!--<DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=rowSelector}" Margin="2,0,2,0" HorizontalAlignment="Center" VerticalAlignment="Stretch" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                <!--<DataGridCheckBoxColumn Binding="{Binding Path=IsSelected}" Header="Select" Width="50" />-->
                <!--<DataGridTemplateColumn Header="Scrip Id" x:Name="colmInstrumentName" IsReadOnly="True" MinWidth="70" SortMemberPath="InstrumentName">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding IndexId, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,StringFormat='{}{0:#}'}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Scrip Id" x:Name="colmIndexValue" IsReadOnly="True" MinWidth="80" SortMemberPath="IndexValue">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock  Background="{Binding Back_IndexValue}" Text="{Binding IndexValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat=.00;.00;#}" TextAlignment="Right" TextWrapping="NoWrap"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Scrip Id" IsReadOnly="True" MinWidth="90" SortMemberPath="StrikePrice">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding perChange,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay ,StringFormat=0.00;0.00;#}" TextAlignment="Right" TextWrapping="NoWrap"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                <!--<DataGridCheckBoxColumn Binding="{Binding IsSelected,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CanUserSort="False">
                    <DataGridCheckBoxColumn.HeaderTemplate>
                        <DataTemplate x:Name="AllChkBx">
                            <CheckBox Name="cbxAll" IsChecked="{Binding Path=DataContext.AllSelected,RelativeSource={RelativeSource AncestorType=DataGrid},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                --><!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="IsChecked" >
                                                <i:InvokeCommandAction Command="{Binding Path=CheckBoxChecked}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>--><!--
                            </CheckBox>

                        </DataTemplate>
                    </DataGridCheckBoxColumn.HeaderTemplate>--><!--

                </DataGridCheckBoxColumn>-->
                <DataGridTextColumn Binding="{Binding IndexId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="SizeToCells" Foreground="{Binding foreColor, Mode =TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="60" ElementStyle="{StaticResource CellLeftAlign}"></DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding IndexValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat=.00;.00;#}" MinWidth="60" Width="SizeToCells" ElementStyle="{StaticResource CellRightAlign}"></DataGridTextColumn>
                <!--<DataGridTextColumn Binding="{Binding upDowntrend, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MinWidth="20"></DataGridTextColumn>-->
                <DataGridTemplateColumn MinWidth="20">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Grid.Column="11" Stretch="None">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="{x:Null}"/>
                                        <Style.Triggers>
                                            <DataTrigger Value="Blue" Binding="{Binding PrevLTP1}">
                                                <Setter Property="Source" Value="../Images/UpTrend.png"/>
                                            </DataTrigger>
                                            <DataTrigger Value="OrangeRed" Binding="{Binding PrevLTP1}">
                                                <Setter Property="Source" Value="../Images/DownTrend.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        
                                    </Style>
                                </Image.Style>
                            </Image>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding perChange, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,StringFormat=0.00;0.00;#}" Width="SizeToCells"  MinWidth="50" ElementStyle="{StaticResource CellRightAlign}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Foreground" Value="{Binding PrevLTP1}"></Setter>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding ChangeInValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   MinWidth="60" Width="SizeToCells" ElementStyle="{StaticResource CellRightAlign}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Foreground" Value="{Binding PrevLTP1}"></Setter>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </Common:CustomDataGrid>

    </Grid>
</Common:TitleBarHelperClass>
