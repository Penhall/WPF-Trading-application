<Common:TitleBarHelperClass x:Class="CommonFrontEnd.View.Trade.NetPositionScripWise"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:n="clr-namespace:CommonFrontEnd.SharedMemories"
        xmlns:Common="clr-namespace:CommonFrontEnd.Common"
        xmlns:Model="clr-namespace:CommonFrontEnd.Model.Trade"
        xmlns:helpers="clr-namespace:CommonFrontEnd.Common.DataGridHelperClasses"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        Title="Net Position - Scrip Wise" ResizeMode="CanResizeWithGrip" 
        Background="White" Foreground="White"
        Width="778"            
        Height="301"
        Top="{Binding TopPosition,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
        Left="{Binding LeftPosition,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource DefaultFont}"
        ShowInTaskbar="False" x:Name="NPScripWindow" Icon="/Images/NetPosScrWs.bmp">
    <Common:TitleBarHelperClass.MenuItems>
        <Common:SystemMenuItem Command="{Binding Path=ExportExcel}" Header="Save Trades in CSV" Id="100"/>
    </Common:TitleBarHelperClass.MenuItems>
    <Common:TitleBarHelperClass.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding ShortCut_Escape}" CommandParameter="{Binding ElementName=NPScripWindow}"/>
    </Common:TitleBarHelperClass.InputBindings>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding NPSWWindowClosing}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="SizeChanged">
            <i:InvokeCommandAction Command="{Binding myLocationChanged}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="LocationChanged">
            <i:InvokeCommandAction Command="{Binding myLocationChanged}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <!--<Model:ScripWisePositionModel x:Key="ScripData"/>-->
        <ResourceDictionary>
            <Style TargetType="{x:Type TextBlock}" x:Key="CellRightAlign">
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Control.Margin" Value="2,0,4,0"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="CellLeftAlign">
                <Setter Property="Control.HorizontalAlignment" Value="Left" />
                <Setter Property="Control.Margin" Value="4,0,2,0"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="CellCenterAlign">
                <Setter Property="Control.HorizontalAlignment" Value="Center" />
            </Style>

            <!--<CollectionViewSource x:Key="MyItemsViewSource" Source="{Binding NetPositionSWDataCollectionWindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="ScripName" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>-->

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/DefaultFont.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>


    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="400*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Label Height="26" Content="Gross Buy Value" HorizontalAlignment="Left" VerticalAlignment="Top"  Margin="5,0,0,0" Grid.Column="0"/>
        <Label Height="26" Content="Gross Sell Value" HorizontalAlignment="Left" VerticalAlignment="Top"  Margin="0,0,0,0" Grid.Column="1" />
        <Label Height="26" Content="Total Net Value" HorizontalAlignment="Left" VerticalAlignment="Top"  Margin="142,0,0,0" Grid.Column="1" />
        <Label Height="26" Content="Total Gross Value" HorizontalAlignment="Left" VerticalAlignment="Top"  Margin="10,0,0,0" Grid.Column="2"/>
        <Button Content="SqOff Batch&#xD;&#xA;     Save" Command="{Binding btnSquareOffSave}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="85" Height="43" Grid.Column="3"/>
        <TextBox Text="{Binding TotalGrossBuyValString,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="23" Margin="10,25,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="118" IsReadOnly="True" Grid.ColumnSpan="2"/>
        <TextBox Text="{Binding TotalGrossSellValString,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="23" Margin="0,25,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="118" IsReadOnly="True" Grid.Column="1"/>
        <TextBox Text="{Binding TotalNetValString,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="23" Margin="145,25,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="118" IsReadOnly="True" Grid.Column="1"/>
        <TextBox Text="{Binding TotalGrossValString,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="23" Margin="15,25,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="118" IsReadOnly="True" Grid.Column="2"/>
        <Label Height="26" Content="-" HorizontalAlignment="Left" Margin="130,25,0,0" VerticalAlignment="Top" Grid.Column="0" />
        <Label Height="26" Content="=" HorizontalAlignment="Left" Margin="121,25,0,0" VerticalAlignment="Top" Grid.Column="1" />

        <Common:CustomDataGrid x:Name="datagridScripwise" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" SelectionUnit="FullRow" AutoGenerateColumns="False" AlternationCount="2" GridLinesVisibility="All"
                      SelectionMode="Extended" VirtualizingStackPanel.IsVirtualizing="True"  CanUserResizeRows="False"  AlternatingRowBackground="#f7f7f7" SelectedItemsList="{Binding selectEntireRowList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      VirtualizingStackPanel.VirtualizationMode="Recycling" IsReadOnly="True" ScrollViewer.IsDeferredScrollingEnabled="True" EnableRowVirtualization="True" 
                      EnableColumnVirtualization="True" SelectedItem="{Binding SelectedItem, Mode=TwoWay}" Margin="10,60,-50,10" Grid.ColumnSpan="4" ItemsSource="{Binding  NetPositionSWDataCollectionWindow,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                  helpers:RowDoubleClickHandler.MethodName="DataGrid_DoubleClick" >
            <DataGrid.InputBindings>
                <KeyBinding Key="Enter" Command="{Binding DataGridDoubleClick}"></KeyBinding>
            </DataGrid.InputBindings>
            <i:Interaction.Triggers>
                <!--<i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding DataGridDoubleClick}" />
                </i:EventTrigger>-->
                <!--<i:EventTrigger EventName="LocationChanged">
                    <i:InvokeCommandAction Command="{Binding myLocationChanged}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="SizeChanged">
                    <i:InvokeCommandAction Command="{Binding myLocationChanged}"/>
                </i:EventTrigger>-->
            </i:Interaction.Triggers>

            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Export as CSV" Command="{Binding ExportExcel}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Resources>
                <Common:BindingProxy x:Key="proxy" Data="{Binding}"/>

            </DataGrid.Resources>
            <!--<DataGrid.DataContext>
                    <n:NetPositionMemory/>
                </DataGrid.DataContext>-->
            <DataGrid.Columns>
                <DataGridTextColumn Header="Scrip" Binding="{Binding ScripID,UpdateSourceTrigger=PropertyChanged}" MinWidth="60"  Width="SizeToCells" ElementStyle="{StaticResource CellLeftAlign}"/>
                <DataGridTextColumn Header="SCode" Binding="{Binding ScripCode,UpdateSourceTrigger=PropertyChanged}" MinWidth="60"   Width="SizeToCells" ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Header="BQty" Binding="{Binding BuyQty,UpdateSourceTrigger=PropertyChanged}" MinWidth="60"   Width="SizeToCells" ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Header="BAvRate" Binding="{Binding AvgBuyRateString,UpdateSourceTrigger=PropertyChanged}" MinWidth="70"   Width="SizeToCells" ElementStyle="{StaticResource CellRightAlign}" Visibility="{Binding Data.isAvgBuyRateString2decimalVisible,Source={StaticResource proxy}}"/>
                <DataGridTextColumn Header="BAvRate" Binding="{Binding AvgBuyRateString4DecimalCheck,UpdateSourceTrigger=PropertyChanged}" MinWidth="70"   Width="SizeToCells" ElementStyle="{StaticResource CellRightAlign}" Visibility="{Binding Data.isAvgBuyRateString4decimalVisible,Source={StaticResource proxy}}"/>
                <DataGridTextColumn Header="SQty" Binding="{Binding SellQty,UpdateSourceTrigger=PropertyChanged}" MinWidth="60"   Width="SizeToCells" ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Header="SAvRate" Binding="{Binding AvgSellRateString,UpdateSourceTrigger=PropertyChanged}" MinWidth="70"   Width="SizeToCells"  ElementStyle="{StaticResource CellRightAlign}" Visibility="{Binding Data.isAvgSellRateString2decimalVisible,Source={StaticResource proxy}}"/>
                <DataGridTextColumn Header="SAvRate" Binding="{Binding AvgSellRateString4DecimalCheck,UpdateSourceTrigger=PropertyChanged}" MinWidth="70"   Width="SizeToCells"  ElementStyle="{StaticResource CellRightAlign}" Visibility="{Binding Data.isAvgSellRateString4decimalVisible,Source={StaticResource proxy}}"/>
                <DataGridTextColumn Header="NetQty" Binding="{Binding NetQty,UpdateSourceTrigger=PropertyChanged}" MinWidth="60"   Width="SizeToCells"  ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Header="NetValue" Binding="{Binding NetValue,UpdateSourceTrigger=PropertyChanged}" MinWidth="70"   Width="SizeToCells"  ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Header="BEP" Binding="{Binding BEPString,UpdateSourceTrigger=PropertyChanged}" MinWidth="40"   Width="SizeToCells"  ElementStyle="{StaticResource CellRightAlign}"/>
                <DataGridTextColumn Header="ISIN No." Binding="{Binding ISINNum,UpdateSourceTrigger=PropertyChanged}" MinWidth="70"   Width="SizeToCells"  ElementStyle="{StaticResource CellLeftAlign}"/>
            </DataGrid.Columns>
        </Common:CustomDataGrid>
        <CheckBox x:Name="ratein4decimal" Width="100" Common:MultiWindowCheckBoxCheckExtension.IsChecked="{Binding Ratein4decimalChecked,Mode=TwoWay}" Grid.Column="3" IsChecked="{Binding Ratein4decimalChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="120,10,0,0" VerticalAlignment="Top" Grid.ColumnSpan="2">
            <AccessText TextWrapping="Wrap">Rate in 4-decimal</AccessText>
        </CheckBox>
    </Grid>
</Common:TitleBarHelperClass>
